
version: '3.9'

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-ms_cobranca}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    env_file:
      - ./.env
      - ./apps/backend/.env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./apps/backend:/app
    command: npm run dev
    ports:
      - "${BACKEND_PORT:-3000}:3000"

  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
    env_file:
      - ./.env
      - ./apps/frontend/.env
    depends_on:
      - backend
    volumes:
      - ./apps/frontend:/app
    command: npm run dev -- --host 0.0.0.0 --port ${FRONTEND_PORT:-5173}
    ports:
      - "${FRONTEND_PORT:-5173}:${FRONTEND_PORT:-5173}"

volumes:
  postgres-data:
  redis-data:
